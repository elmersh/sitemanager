server {
    listen 80;
    server_name {{ .Domain }};

    {{if .RedirectHTTP}}
    # Redireccionar HTTP a HTTPS
    return 301 https://$server_name$request_uri;
    {{else}}
    # Configuración HTTP normal aquí
    {{end}}
}

server {
    listen 443 ssl http2;
    server_name {{ .Domain }};

    # Certificados SSL
    ssl_certificate {{ .CertPath }};
    ssl_certificate_key {{ .KeyPath }};

    # Configuración SSL recomendada
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # HSTS (opcional, comentado por defecto)
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    {{if eq .SiteType "laravel"}}
    root {{ .RootDir }};
    index index.php index.html index.htm;
    client_max_body_size 100M;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php{{ .PHP }}-fpm.sock;
    }
    {{else if eq .SiteType "nodejs"}}
    # Proxy para Node.js
    location / {
        proxy_pass http://localhost:{{ .Port }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Servir archivos estáticos si existen
    location /static/ {
        root {{ .RootDir }};
        try_files $uri =404;
    }
    {{else}}
    # Configuración para sitio estático
    root {{ .RootDir }};
    index index.html index.htm;

    location / {
        try_files $uri $uri/ =404;
    }

    # Configuración de caché para archivos estáticos
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Configuración especial para HTML
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
    }
    {{end}}

    location ~ /\.ht {
        deny all;
    }

    location ~ /\.git {
        deny all;
    }

    location ~ /\.(env|log)$ {
        deny all;
    }

    # Headers de seguridad mejorados para HTTPS
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    access_log {{ .HomeDir }}/logs/access.log;
    error_log {{ .HomeDir }}/logs/error.log;
}